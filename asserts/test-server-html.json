{"msg": "# Markdown For Typora\\n\\n## Overview\\n\\n**Markdown** is created by [Daring Fireball](http://daringfireball.net/); the original guideline is [here](http://daringfireball.net/projects/markdown/syntax). Its syntax, however, varies between different parsers or editors. **Typora** is using [GitHub Flavored Markdown][GFM].\\n\\n[toc]\\n\\n## Block Elements\\n\\n### Paragraph and line breaks\\n\\nA paragraph is simply one or more consecutive lines of text. In markdown source code, paragraphs are separated by two or more blank lines. In Typora, you only need one blank line (press `Return` once) to create a new paragraph.\\n\\nPress `Shift` + `Return` to create a single line break. Most other markdown parsers will ignore single line breaks, so in order to make other markdown parsers recognize your line break, you can leave two spaces at the end of the line, or insert `<br/>`.\\n\\n### Headings\\n\\nHeadings use 1-6 hash (`#`) characters at the start of the line, corresponding to heading levels 1-6. For example:\\n\\n```markdown\\n# This is an H1\\n\\n## This is an H2\\n\\n###### This is an H6\\n```\\n\\nIn Typora, input \u2018#\u2019s followed by title content, and press `Return` key will create a heading.\\n\\n### Blockquotes\\n\\nMarkdown uses email-style > characters for block quoting. They are presented as:\\n\\n```markdown\\n> This is a blockquote with two paragraphs. This is first paragraph.\\n>\\n> This is second pragraph. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\\n\\n> This is another blockquote with one paragraph. There is three empty line to seperate two blockquote.\\n```\\n\\nIn Typora, inputting \u2018>\u2019 followed by your quote contents will generate a quote block. Typora will insert a proper \u2018>\u2019 or line break for you. Nested block quotes (a block quote inside another block quote) by adding additional levels of \u2018>\u2019.\\n\\n### Lists\\n\\nInput `* list item 1` will create an unordered list - the `*` symbol can be replace with `+` or `-`.\\n\\nInput `1. list item 1` will create an ordered list - their markdown source code is as follows:\\n\\n```markdown\\n## un-ordered list\\n\\n- Red\\n- Green\\n- Blue\\n\\n## ordered list\\n\\n1.  Red\\n2.      Green\\n3.  Blue\\n```\\n\\n### Task List\\n\\nTask lists are lists with items marked as either [ ] or [x] (incomplete or complete). For example:\\n\\n```markdown\\n- [ ] a task list item\\n- [ ] list syntax required\\n- [ ] normal **formatting**, @mentions, #1234 refs\\n- [ ] incomplete\\n- [x] completed\\n```\\n\\nYou can change the complete/incomplete state by clicking on the checkbox before the item.\\n\\n### (Fenced) Code Blocks\\n\\nTypora only supports fences in GitHub Flavored Markdown. Original code blocks in markdown are not supported.\\n\\nUsing fences is easy: Input \\`\\`\\` and press `return`. Add an optional language identifier after \\`\\`\\` and we'll run it through syntax highlighting:\\n\\n````gfm\\nHere's an example:\\n\\n```js\\nfunction test() {\\n  console.log(\"notice the blank line before this function?\");\\n}\\n```\\n\\nsyntax highlighting:\\n```ruby\\nrequire 'redcarpet'\\nmarkdown = Redcarpet.new(\"Hello World!\")\\nputs markdown.to_html\\n```\\n````\\n\\n### Math Blocks\\n\\nYou can render _LaTeX_ mathematical expressions using **MathJax**.\\n\\nTo add a mathematical expression, input `$$` and press the 'Return' key. This will trigger an input field which accepts _Tex/LaTex_ source. For example:\\n\\n$$\\n\\mathbf{V}_1 \\times \\mathbf{V}_2 =  \\begin{vmatrix}\\n\\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\\\\\n\\frac{\\partial X}{\\partial u} &  \\frac{\\partial Y}{\\partial u} & 0 \\\\\\n\\frac{\\partial X}{\\partial v} &  \\frac{\\partial Y}{\\partial v} & 0 \\\\\\n\\end{vmatrix}\\n$$\\n\\nIn the markdown source file, the math block is a _LaTeX_ expression wrapped by a pair of \u2018$$\u2019 marks:\\n\\n```markdown\\n$$\\n\\mathbf{V}_1 \\times \\mathbf{V}_2 =  \\begin{vmatrix}\\n\\mathbf{i} & \\mathbf{j} & \\mathbf{k} \\\\\\n\\frac{\\partial X}{\\partial u} &  \\frac{\\partial Y}{\\partial u} & 0 \\\\\\n\\frac{\\partial X}{\\partial v} &  \\frac{\\partial Y}{\\partial v} & 0 \\\\\\n\\end{vmatrix}\\n$$\\n```\\n\\nYou can find more details [here](https://support.typora.io/Math/).\\n\\n### Tables\\n\\nInput `| First Header  | Second Header |` and press the `return` key. This will create a table with two columns.\\n\\nAfter a table is created, putting focus on that table will open up a toolbar for the table where you can resize, align, or delete the table. You can also use the context menu to copy and add/delete individual columns/rows.\\n\\nThe full syntax for tables is described below, but it is not necessary to know the full syntax in detail as the markdown source code for tables is generated automatically by Typora.\\n\\nIn markdown source code, they look like:\\n\\n```markdown\\n| First Header | Second Header |\\n| ------------ | ------------- |\\n| Content Cell | Content Cell  |\\n| Content Cell | Content Cell  |\\n```\\n\\nYou can also include inline Markdown such as links, bold, italics, or strikethrough in the table.\\n\\nFinally, by including colons (`:`) within the header row, you can define text in that column to be left-aligned, right-aligned, or center-aligned:\\n\\n```markdown\\n| Left-Aligned  | Center Aligned  | Right Aligned |\\n| :------------ | :-------------: | ------------: |\\n| col 3 is      | some wordy text |         $1600 |\\n| col 2 is      |    centered     |           $12 |\\n| zebra stripes |    are neat     |            $1 |\\n```\\n\\nA colon on the left-most side indicates a left-aligned column; a colon on the right-most side indicates a right-aligned column; a colon on both sides indicates a center-aligned column.\\n\\n### Footnotes\\n\\n```markdown\\nYou can create footnotes like this[^footnote].\\n\\n[^footnote]: Here is the _text_ of the **footnote**.\\n```\\n\\nwill produce:\\n\\nYou can create footnotes like this[^footnote].\\n\\n[^footnote]: Here is the _text_ of the **footnote**.\\n\\nHover over the \u2018footnote\u2019 superscript to see content of the footnote.\\n\\n### Horizontal Rules\\n\\nInputting `***` or `---` on a blank line and pressing `return` will draw a horizontal line.\\n\\n---\\n\\n### YAML Front Matter\\n\\nTypora now supports [YAML Front Matter](http://jekyllrb.com/docs/frontmatter/). Input `---` at the top of the article and then press `Return` to introduce a metadata block. Alternatively, you can insert a metadata block from the top menu of Typora.\\n\\n### Table of Contents (TOC)\\n\\nInput `[toc]` and press the `Return` key. This will create a \u201cTable of Contents\u201d section. The TOC extracts all headings from the document, and its contents are updated automatically as you add to the document.\\n\\n## Span Elements\\n\\nSpan elements will be parsed and rendered right after typing. Moving the cursor in middle of those span elements will expand those elements into markdown source. Below is an explanation of the syntax for each span element.\\n\\n### Links\\n\\nMarkdown supports two styles of links: inline and reference.\\n\\nIn both styles, the link text is delimited by [square brackets].\\n\\nTo create an inline link, use a set of regular parentheses immediately after the link text\u2019s closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an optional title for the link, surrounded in quotes. For example:\\n\\n```markdown\\nThis is [an example](http://example.com/ \"Title\") inline link.\\n\\n[This link](http://example.net/) has no title attribute.\\n```\\n\\nwill produce:\\n\\nThis is [an example](http://example.com/ \"Title\") inline link. (`<p>This is <a href=\"http://example.com/\" title=\"Title\">`)\\n\\n[This link](http://example.net/) has no title attribute. (`<p><a href=\"http://example.net/\">This link</a> has no`)\\n\\n#### Internal Links\\n\\n**You can set the href to headings**, which will create a bookmark that allow you to jump to that section after clicking. For example:\\n\\nCommand(on Windows: Ctrl) + Click [This link](#block-elements) will jump to heading `Block Elements`. To see how to write that, please move cursor or click that link with `\u2318` key pressed to expand the element into markdown source.\\n\\n#### Reference Links\\n\\nReference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:\\n\\n```markdown\\nThis is [an example][id] reference-style link.\\n\\nThen, anywhere in the document, you define your link label on a line by itself like this:\\n\\n[id]: http://example.com/ \"Optional Title Here\"\\n```\\n\\nIn Typora, they will be rendered like so:\\n\\nThis is [an example][id] reference-style link.\\n\\n[id]: http://example.com/ \"Optional Title Here\"\\n\\nThe implicit link name shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets \u2014 for example, to link the word \u201cGoogle\u201d to the google.com web site, you could simply write:\\n\\n```markdown\\n[Google][]\\nAnd then define the link:\\n\\n[Google]: http://google.com/\\n```\\n\\nIn Typora, clicking the link will expand it for editing, and command+click will open the hyperlink in your web browser.\\n\\n### URLs\\n\\nTypora allows you to insert URLs as links, wrapped by `<`brackets`>`.\\n\\n`<i@typora.io>` becomes <i@typora.io>.\\n\\nTypora will also automatically link standard URLs. e.g: www.google.com.\\n\\n### Images\\n\\nImages have similar syntax as links, but they require an additional `!` char before the start of the link. The syntax for inserting an image looks like this:\\n\\n```markdown\\n![Alt text](/path/to/img.jpg)\\n\\n![Alt text](/path/to/img.jpg \"Optional title\")\\n```\\n\\nYou are able to use drag & drop to insert an image from an image file or your web browser. You can modify the markdown source code by clicking on the image. A relative path will be used if the image that is added using drag & drop is in same directory or sub-directory as the document you're currently editing.\\n\\nIf you\u2019re using markdown for building websites, you may specify a URL prefix for the image preview on your local computer with property `typora-root-url` in YAML Front Matters. For example, input `typora-root-url:/User/Abner/Website/typora.io/` in YAML Front Matters, and then `![alt](/blog/img/test.png)` will be treated as `![alt](file:///User/Abner/Website/typora.io/blog/img/test.png)` in Typora.\\n\\nYou can find more details [here](https://support.typora.io/Images/).\\n\\n### Emphasis\\n\\nMarkdown treats asterisks (`*`) and underscores (`_`) as indicators of emphasis. Text wrapped with one `*` or `_` will be wrapped with an HTML `<em>` tag. E.g:\\n\\n```markdown\\n_single asterisks_\\n\\n_single underscores_\\n```\\n\\noutput:\\n\\n_single asterisks_\\n\\n_single underscores_\\n\\nGFM will ignore underscores in words, which is commonly used in code and names, like this:\\n\\n> wow_great_stuff\\n>\\n> do_this_and_do_that_and_another_thing.\\n\\nTo produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:\\n\\n```markdown\\n\\*this text is surrounded by literal asterisks\\*\\n```\\n\\nTypora recommends using the `*` symbol.\\n\\n### Strong\\n\\nA double `*` or `_` will cause its enclosed contents to be wrapped with an HTML `<strong>` tag, e.g:\\n\\n```markdown\\n**double asterisks**\\n\\n**double underscores**\\n```\\n\\noutput:\\n\\n**double asterisks**\\n\\n**double underscores**\\n\\nTypora recommends using the `**` symbol.\\n\\n### Code\\n\\nTo indicate an inline span of code, wrap it with backtick quotes (`). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:\\n\\n```markdown\\nUse the `printf()` function.\\n```\\n\\nwill produce:\\n\\nUse the `printf()` function.\\n\\n### Strikethrough\\n\\nGFM adds syntax to create strikethrough text, which is missing from standard Markdown.\\n\\n`~~Mistaken text.~~` becomes ~~Mistaken text.~~\\n\\n### Underlines\\n\\nUnderline is powered by raw HTML.\\n\\n`<u>Underline</u>` becomes <u>Underline</u>.\\n\\n### Emoji :smile:\\n\\nInput emoji with syntax `:smile:`.\\n\\nUser can trigger auto-complete suggestions for emoji by pressing `ESC` key, or trigger it automatically after enabling it on preference panel. Also, inputting UTF-8 emoji characters directly is also supported by going to `Edit` -> `Emoji & Symbols` in the menu bar (macOS).\\n\\n### Inline Math\\n\\nTo use this feature, please enable it first in the `Preference` Panel -> `Markdown` Tab. Then, use `$` to wrap a TeX command. For example: `$\\lim_{x \\to \\infty} \\exp(-x) = 0$` will be rendered as LaTeX command.\\n\\nTo trigger inline preview for inline math: input \u201c$\u201d, then press the `ESC` key, then input a TeX command.\\n\\nYou can find more details [here](https://support.typora.io/Math/).\\n\\n### Subscript\\n\\nTo use this feature, please enable it first in the `Preference` Panel -> `Markdown` Tab. Then, use `~` to wrap subscript content. For example: `H~2~O`, `X~long\\ text~`/\\n\\n### Superscript\\n\\nTo use this feature, please enable it first in the `Preference` Panel -> `Markdown` Tab. Then, use `^` to wrap superscript content. For example: `X^2^`.\\n\\n### Highlight\\n\\nTo use this feature, please enable it first in the `Preference` Panel -> `Markdown` Tab. Then, use `==` to wrap highlight content. For example: `==highlight==`.\\n\\n## HTML\\n\\nYou can use HTML to style content what pure Markdown does not support. For example, use `<span style=\"color:red\">this text is red</span>` to add text with red color.\\n\\n### Embed Contents\\n\\nSome websites provide iframe-based embed code which you can also paste into Typora. For example:\\n\\n```Markdown\\n<iframe height='265' scrolling='no' title='Fancy Animated SVG Menu' src='http://codepen.io/jeangontijo/embed/OxVywj/?height=265&theme-id=0&default-tab=css,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'></iframe>\\n```\\n\\n### Video\\n\\nYou can use the `<video>` HTML tag to embed videos. For example:\\n\\n```Markdown\\n<video src=\"xxx.mp4\" />\\n```\\n\\n### Other HTML Support\\n\\nYou can find more details [here](https://support.typora.io/HTML/).\\n\\n[GFM]: https://help.github.com/articles/github-flavored-markdown/\\n", "format": "server-html"}